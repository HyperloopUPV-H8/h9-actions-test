name: Build

on:
  workflow_call:
    secrets:
      SECRET:
        required: true
  workflow_dispatch:

env:
  SECRET: ${{ secrets.SECRET }}

jobs:
  build-backend-linux:
    name: "Build backend for linux"
    runs-on: ubuntu-latest

    # Runs on alpine because it is easier to staticly link the library
    container:
      image: golang:alpine 

    env:
      BACKEND_DIR: ./backend

    steps:
    - name: "Install packages"
      run: apk update && apk add --no-cache libpcap-dev musl-dev gcc go

    - uses: actions/checkout@v3

    - name: "Create output path"
      working-directory: "${{env.BACKEND_DIR}}"
      run: mkdir ./output

    - name: "Load secret"
      working-directory: "${{env.BACKEND_DIR}}"
      run: |
        ./load-secret.sh "$SECRET"

    - name: "Build (64 bit)"
      working-directory: "${{env.BACKEND_DIR}}/cmd"
      env:
        CGO_ENABLED: 1
        GOARCH: amd64
        GOOS: linux
      run: |
        go build -ldflags '-linkmode external -extldflags "-static"' -o ../output/backend-linux-64

    - name: "Uplaod artifacts"
      uses: actions/upload-artifact@v2
      with:
        name: backend-linux
        path: "${{env.BACKEND_DIR}}/output/backend-linux-64"

  build-backend-windows:
    name: "Build backend for windows"
    runs-on: windows-latest

    env:
      BACKEND_DIR: ".\\backend"

    steps:
    - uses: actions/checkout@v3

    - name: "Setup Go"
      uses: actions/setup-go@v4
      with:
        go-version: "1.19"
        cache-dependency-path: "${{env.BACKEND_DIR}}\\go.sum"

    - name: "Load secret"
      working-directory: "${{env.BACKEND_DIR}}"
      run: |
        bash ".\load-secret.sh" "${{env.SECRET}}"

    - name: "Create output path"
      working-directory: "${{env.BACKEND_DIR}}"
      run: mkdir .\output

    - name: "Build (64 bit)"
      working-directory: "${{env.BACKEND_DIR}}\\cmd"
      env:
        CGO_ENABLED: 1
        GOARCH: amd64
        GOOS: windows
      run: |
        go build -ldflags '-linkmode external -extldflags "-static"' -o ..\output\backend-windows-64.exe

    - name: "Uplaod artifacts"
      uses: actions/upload-artifact@v3
      with:
        name: backend-windows
        path: "${{env.BACKEND_DIR}}\\output\\backend-windows-64.exe"
